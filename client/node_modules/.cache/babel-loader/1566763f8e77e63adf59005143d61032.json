{"ast":null,"code":"var _jsxFileName = \"/Users/michaelballos/ideaProjects/apollo-intro/client/src/pages/track.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Layout, QueryResult } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_TRACK = gql`\n  query getTrack($trackId: ID!) {\n    track(id: $trackId) {\n      id\n      title\n      author {\n        id\n        name\n        photo\n      }\n      thumbnail\n      length\n      modulesCount\n      numberOfViews\n      modules {\n        id\n        title\n        length\n      }\n      description\n    }\n  }\n`;\nexport default function Track(_ref) {\n  _s();\n\n  let {\n    trackId\n  } = _ref;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TRACK, {\n    variables: {\n      trackId\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(QueryResult, {\n      error: error,\n      loading: loading,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Track, \"Uz7+H7UCCx9kv7+yvUr+86LNjvE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["/Users/michaelballos/ideaProjects/apollo-intro/client/src/pages/track.js"],"names":["React","gql","useQuery","Layout","QueryResult","GET_TRACK","Track","trackId","data","loading","error","variables"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,QAFF,QAGO,gBAHP;AAIA,SACEC,MADF,EAEEC,WAFF,QAGO,eAHP;;AAKA,OAAO,MAAMC,SAAS,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAwBP,eAAe,SAASK,KAAT,OAA0B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACvC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFR,QAAQ,CAACG,SAAD,EAAY;AACtBM,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AADW,GAAZ,CAJZ;AASA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,KAAK,EAAEG,KADT;AAEE,MAAA,OAAO,EAAED,OAFX;AAGE,MAAA,IAAI,EAAED;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArBuBF,K;UAKlBJ,Q;;;KALkBI,K","sourcesContent":["import React from 'react';\nimport {\n  gql,\n  useQuery\n} from '@apollo/client';\nimport {\n  Layout,\n  QueryResult\n} from '../components';\n\nexport const GET_TRACK = gql`\n  query getTrack($trackId: ID!) {\n    track(id: $trackId) {\n      id\n      title\n      author {\n        id\n        name\n        photo\n      }\n      thumbnail\n      length\n      modulesCount\n      numberOfViews\n      modules {\n        id\n        title\n        length\n      }\n      description\n    }\n  }\n`;\n\nexport default function Track({trackId}) {\n  const {\n    data,\n    loading,\n    error,\n  } = useQuery(GET_TRACK, {\n    variables: {\n      trackId,\n    }\n  });\n  return (\n    <Layout>\n      <QueryResult\n        error={error}\n        loading={loading}\n        data={data}\n      >\n        {/* this is where our component displaying the data will go */}\n      </QueryResult>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}