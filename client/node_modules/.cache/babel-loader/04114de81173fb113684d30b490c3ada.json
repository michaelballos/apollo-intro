{"ast":null,"code":"var _jsxFileName = \"/Users/michaelballos/ideaProjects/apollo-intro/client/src/pages/tracks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Layout } from '../components';\nimport { gql, useQuery } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport QueryResult from '../components/query-result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TRACKS = gql`\n  query GetTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        id\n        name\n        photo\n      }\n    }\n  }\n`;\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\n\nconst Tracks = () => {\n  _s();\n\n  var _data$tracksForHome;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(TRACKS);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    grid: true,\n    children: data === null || data === void 0 ? void 0 : (_data$tracksForHome = data.tracksForHome) === null || _data$tracksForHome === void 0 ? void 0 : _data$tracksForHome.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n      track: track\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tracks, \"Uz7+H7UCCx9kv7+yvUr+86LNjvE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/michaelballos/ideaProjects/apollo-intro/client/src/pages/tracks.js"],"names":["React","Layout","gql","useQuery","TrackCard","QueryResult","TRACKS","Tracks","data","loading","error","tracksForHome","map","track","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SACEC,GADF,EAEEC,QAFF,QAGO,gBAHP;AAIA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAQC,WAAR,MAAyB,4BAAzB;;AAEA,OAAO,MAAMC,MAAM,GAAGJ,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP;AACA;AACA;AACA;;AACA,MAAMK,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACnB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFP,QAAQ,CAACG,MAAD,CAJZ;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA,cACGE,IADH,aACGA,IADH,8CACGA,IAAI,CAAEG,aADT,wDACG,oBAAqBC,GAArB,CAAyBC,KAAK,iBAC7B,QAAC,SAAD;AAEE,MAAA,KAAK,EAAEA;AAFT,OACOA,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;GAAMP,M;UAKAJ,Q;;;KALAI,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { Layout } from '../components';\nimport {\n  gql,\n  useQuery,\n} from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport  QueryResult from '../components/query-result';\n\nexport const TRACKS = gql`\n  query GetTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        id\n        name\n        photo\n      }\n    }\n  }\n`;\n\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\nconst Tracks = () => {\n  const {\n    data,\n    loading,\n    error,\n  } = useQuery(TRACKS);\n  return (\n    <Layout grid>\n      {data?.tracksForHome?.map(track => (\n        <TrackCard\n          key={track.id}\n          track={track}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Tracks;\n"]},"metadata":{},"sourceType":"module"}