{"ast":null,"code":"var _jsxFileName = \"/Users/michaelballos/ideaProjects/apollo-intro/client/src/pages/tracks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Layout, QueryResult } from '../components';\nimport { gql, useQuery } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TRACKS = gql`\n  query GetTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        id\n        name\n        photo\n      }\n    }\n  }\n`;\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\n\nconst Tracks = () => {\n  _s();\n\n  var _data$tracksForHome;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(TRACKS);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    grid: true,\n    children: /*#__PURE__*/_jsxDEV(QueryResult, {\n      data: data,\n      loading: loading,\n      error: error,\n      children: data === null || data === void 0 ? void 0 : (_data$tracksForHome = data.tracksForHome) === null || _data$tracksForHome === void 0 ? void 0 : _data$tracksForHome.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n        track: track\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tracks, \"Uz7+H7UCCx9kv7+yvUr+86LNjvE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/michaelballos/ideaProjects/apollo-intro/client/src/pages/tracks.js"],"names":["React","Layout","QueryResult","gql","useQuery","TrackCard","TRACKS","Tracks","data","loading","error","tracksForHome","map","track","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,WAFF,QAGO,eAHP;AAIA,SACEC,GADF,EAEEC,QAFF,QAGO,gBAHP;AAIA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,OAAO,MAAMC,MAAM,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP;AACA;AACA;AACA;;AACA,MAAMI,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACnB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFN,QAAQ,CAACE,MAAD,CAJZ;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAAA,gBAKGF,IALH,aAKGA,IALH,8CAKGA,IAAI,CAAEG,aALT,wDAKG,oBAAqBC,GAArB,CAAyBC,KAAK,iBAC7B,QAAC,SAAD;AAEE,QAAA,KAAK,EAAEA;AAFT,SACOA,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtBD;;GAAMP,M;UAKAH,Q;;;KALAG,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport {\n  Layout,\n  QueryResult,\n} from '../components';\nimport {\n  gql,\n  useQuery,\n} from '@apollo/client';\nimport TrackCard from '../containers/track-card';\n\nexport const TRACKS = gql`\n  query GetTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        id\n        name\n        photo\n      }\n    }\n  }\n`;\n\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\nconst Tracks = () => {\n  const {\n    data,\n    loading,\n    error,\n  } = useQuery(TRACKS);\n  return (\n    <Layout grid>\n      <QueryResult\n        data={data}\n        loading={loading}\n        error={error}\n      >\n        {data?.tracksForHome?.map(track => (\n          <TrackCard\n            key={track.id}\n            track={track}\n          />\n        ))}\n      </QueryResult>\n    </Layout>\n  );\n};\n\nexport default Tracks;\n"]},"metadata":{},"sourceType":"module"}